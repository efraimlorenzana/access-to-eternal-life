{"version":3,"sources":["components/Buffer/open-book.gif","components/Navigation/navigation-bar.jsx","vendor/scripture.api.bible.js","components/Bible/book.jsx","components/Buffer/open-book.jsx","pages/Home/home-page.jsx","bible/books.js","components/Bible/verse-context.jsx","components/Bible/verses.jsx","pages/Chapter/chapter-page.jsx","Custom/hooks.js","components/Footer/footer-bar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","exact","to","Scriptures","endpoint","status","isError","message","Promise","resolve","fetch","method","headers","then","res","json","data","error","catch","Book","info","name","nameLong","bibleId","id","OpenBook","bufferMessage","src","IndicatorLogo","alt","Home","props","useState","isLoading","bibleBooks","set_bibleBooks","fetchedData","a","useEffect","console","log","map","book","key","VerseContext","detail","context","verse","set_verse","fetchedVerse","reference","dangerouslySetInnerHTML","__html","content","BibleVerses","chapterId","verses","set_verses","fetchedVerses","Chapter","queryString","URLSearchParams","useLocation","search","bookChapter","set_bookChapter","get","bookId","fetchedChapters","books","i","number","Footer","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0c3124c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/open-book.de9eb637.gif\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './navigation-bar.css';\r\n\r\nconst Navigation = () => {\r\n    return ( \r\n        <nav className=\"navigation\">\r\n            <span className=\"navigation__brand\">\r\n                <h2>King James Version</h2>\r\n            </span>\r\n\r\n            <ul className=\"navigation__links\">\r\n                <li>\r\n                    <NavLink exact to=\"/\">Home</NavLink>\r\n                </li>\r\n\r\n                {/* <li>\r\n                    <NavLink exact to=\"/chapter\">Chapter</NavLink>\r\n                </li> */}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Navigation;","const  Scriptures = (endpoint) => {\r\n    let status = {\r\n        isError: false,\r\n        message: null\r\n    }\r\n\r\n    try {\r\n        return new Promise(resolve => {\r\n            fetch(`https://api.scripture.api.bible/${endpoint}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'api-key': '57f09446f302f6e2ffbfd083d5f069c4'\r\n                }\r\n\r\n            }).then(res => res.json()).then(({ data }) => {\r\n                resolve({ data, error: status });\r\n            }).catch(({ message }) => {\r\n                status.isError = true;\r\n                status.message = message;\r\n\r\n                resolve({ error: status });\r\n            });\r\n        });\r\n    } catch ({ message }) {\r\n        status.isError = true;\r\n        status.message = message;\r\n\r\n        return { data: null, error: status };\r\n    }\r\n}\r\n\r\nexport default Scriptures;","import React from 'react';\r\nimport './book.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Book = ({ info }) => {\r\n    \r\n    return ( \r\n        <div className=\"bible__books\">\r\n            <h4>{info.name}</h4>\r\n            <p>\r\n                {info.nameLong}\r\n            </p>\r\n            <Link to={`/chapter?bibleId=${info.bibleId}&bookId=${info.id}`} >Read</Link>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Book;","import React from 'react';\r\nimport IndicatorLogo from './open-book.gif';\r\nimport './open-book.css';\r\n\r\nconst OpenBook = ({ bufferMessage }) => {\r\n    return ( \r\n        <div className=\"open-book-buffering\">\r\n            <div className=\"buffer-indicator\">\r\n                <div className=\"buffer-message\">{bufferMessage}</div>\r\n                <img src={IndicatorLogo} alt=\"Loading...\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default OpenBook;","import React, { useEffect, useState } from 'react';\r\nimport Scriptures from '../../vendor/scripture.api.bible';\r\nimport { KJV } from '../../bible/books';\r\nimport Book from '../../components/Bible/book';\r\nimport './home-page.css';\r\nimport OpenBookBuffering from '../../components/Buffer/open-book';\r\n\r\nconst Home = (props) => {\r\n    const [bibleBooks, set_bibleBooks] = useState({ isLoading: true, data: [] });\r\n\r\n    const fetchedData = async () => {\r\n        try {\r\n            const { data, error } = await Scriptures(`v1/bibles/${KJV}/books`);\r\n            set_bibleBooks({ isLoading: false, data, error });\r\n        } catch(error) {\r\n            set_bibleBooks({ isLoading: false, error });\r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n        fetchedData();\r\n    }, []);\r\n    console.log(bibleBooks);\r\n    return bibleBooks.isLoading ? <OpenBookBuffering bufferMessage='Getting list of Books...' /> : ( \r\n        <section className=\"home\">\r\n            <h1>Scriptures</h1>\r\n\r\n            <div className=\"scriptures\">\r\n                {\r\n                    bibleBooks.error.isError ? \r\n                    <span>{bibleBooks.error.message}</span> :\r\n                    bibleBooks.data.map(book => <Book key={book.id} info={book} />)\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default Home;","export const KJV = \"de4e12af7f28f599-01\";","import React, { useState, useEffect } from 'react';\r\nimport './verse-context.css';\r\nimport Scriptures from '../../vendor/scripture.api.bible';\r\nimport OpenBookBuffering from '../../components/Buffer/open-book';\r\n\r\nconst VerseContext = ({ detail }) => {\r\n    const [verse, set_verse] = useState({ isLoading: true, context: null });\r\n    const fetchedVerse = async () => {\r\n        try {\r\n            const { data, error } = await Scriptures(`v1/bibles/${detail.bibleId}/verses/${detail.id}`);\r\n            \r\n            set_verse({ isLoading: false, context: data, error });\r\n        } catch (error) {\r\n            set_verse({ isLoading: false, context: null, error });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchedVerse();\r\n    }, []);\r\n\r\n    const strToDOM = (text) => {\r\n        return new DOMParser().parseFromString(text, 'text/xml');\r\n    }\r\n\r\n    return verse.isLoading ? <OpenBookBuffering bufferMessage={`Populating ${detail.reference}`} /> : ( \r\n        <div className=\"verse-context\">\r\n            <div>\r\n                <em><strong>{detail.reference}</strong></em>\r\n                <p dangerouslySetInnerHTML={{__html: verse.context.content}}></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default VerseContext;","import React, { useState, useEffect } from 'react';\r\nimport Scriptures from '../../vendor/scripture.api.bible';\r\n//import './verses.css';\r\nimport Verse from './verse-context';\r\n\r\nconst BibleVerses = ({ bibleId, chapterId }) => {\r\n    const [verses, set_verses] = useState([]);\r\n\r\n    const fetchedVerses = async () => {\r\n        try {\r\n            const { data, error } = await Scriptures(`v1/bibles/${bibleId}/chapters/${chapterId}/verses`);\r\n            \r\n            if(chapterId !== null)\r\n                set_verses(data);\r\n        } catch (error) {\r\n            //set_verses([]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchedVerses();\r\n    }, []);\r\n    console.log('verses', verses);\r\n    return ( \r\n        <div className=\"bible-verses\">\r\n            {\r\n                verses.map(verse => <Verse key={verse.id} detail={verse} />)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BibleVerses;","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { useQuery } from '../../Custom/hooks';\r\nimport Scriptures from '../../vendor/scripture.api.bible';\r\nimport { Link } from 'react-router-dom';\r\nimport './chapter-page.css';\r\nimport OpenBookBuffering from '../../components/Buffer/open-book';\r\nimport Verses from '../../components/Bible/verses';\r\n\r\nconst Chapter = () => {\r\n    let queryString = useQuery();\r\n\r\n    const [bookChapter, set_bookChapter] = useState({ isLoading: true, data: [] });\r\n\r\n    const bibleId = queryString.get('bibleId');\r\n    const bookId = queryString.get('bookId');\r\n\r\n    const fetchedChapters = async () => {\r\n        try {\r\n            const { data, error } = await Scriptures(`v1/bibles/${bibleId}/books/${bookId}/chapters`);\r\n\r\n            set_bookChapter({ isLoading: false, data, error });\r\n        } catch (error) {\r\n            set_bookChapter({ isLoading: false, error });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchedChapters();\r\n    }, []);\r\n\r\n    console.log('bookChapter', bookChapter);\r\n\r\n    const ChapterElement = ({ books }) =>  (\r\n        <Fragment>\r\n            <h2>{bookChapter.data[0].reference}</h2>\r\n            \r\n            <div className=\"chapter__content\">\r\n                <ul className=\"chapter__content--list\">\r\n                    {\r\n                        books.map((book, i) => i !== 0 ? <li key={i}><Link key={book.id} to={`/chapter?bibleId=${bibleId}&bookId=${bookId}&read=${book.id}`}>Chapter {book.number}</Link></li> : null)\r\n                    }\r\n                </ul>\r\n\r\n                <div className=\"chapter__content--data\">\r\n                    <Verses bibleId={bibleId} chapterId={queryString.get('read')} />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n    return bookChapter.isLoading ? <OpenBookBuffering bufferMessage=\"Loading Chapters...\" /> : ( \r\n        <div className=\"chapter\">\r\n            {\r\n                bookChapter.error.isError ?\r\n                <div>{bookChapter.error.message}</div> :\r\n                <ChapterElement books={bookChapter.data} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Chapter;","import { useLocation } from 'react-router-dom';\r\n\r\nexport const useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}","import React from 'react';\r\nimport './footer-bar.css';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <div className=\"footer\">\r\n            <span className=\"footer__copyrigth\">\r\n                &copy; 2019 American Bible Society All rights reserved\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Footer;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navigation from './components/Navigation/navigation-bar';\r\nimport Home from './pages/Home/home-page';\r\nimport Chapter from './pages/Chapter/chapter-page';\r\nimport Footer from './components/Footer/footer-bar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <header className=\"app-header\">\r\n            <Navigation />\r\n          </header>\r\n          <main className=\"app-main\">\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route exact path='/chapter' component={Chapter} />\r\n            </Switch>\r\n          </main>\r\n          <footer className=\"app-footer\">\r\n            <Footer />\r\n          </footer>\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}